{
  "contracts": {
    "Chip": {
      "address": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
      "constructorCode": "6080604052612fed806100136000396000f3fe",
      "bodyBytecodeHash": "fdfe29b9e9697284901628f2cf6cfa924528ce38bdfb6ed1f8423af40284e1cd",
      "localBytecodeHash": "a990e59482a21ee48b80e91829e50cdef05d0d0dc3b38680a4eb19fff9694465",
      "deployedBytecodeHash": "a990e59482a21ee48b80e91829e50cdef05d0d0dc3b38680a4eb19fff9694465",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 1892,
              "type": "t_mapping<t_bool>",
              "src": "150:32:17"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin/upgrades/contracts/Initializable.sol",
          "label": "initialized",
          "astId": 3999,
          "type": "t_bool",
          "src": "757:24:33"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin/upgrades/contracts/Initializable.sol",
          "label": "initializing",
          "astId": 4001,
          "type": "t_bool",
          "src": "876:25:33"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin/upgrades/contracts/Initializable.sol",
          "label": "______gap",
          "astId": 4057,
          "type": "t_array:50<t_uint256>",
          "src": "1951:29:33"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
          "label": "_name",
          "astId": 3489,
          "type": "t_string",
          "src": "397:20:28"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
          "label": "_symbol",
          "astId": 3491,
          "type": "t_string",
          "src": "423:22:28"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
          "label": "_decimals",
          "astId": 3493,
          "type": "t_uint8",
          "src": "451:23:28"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
          "label": "______gap",
          "astId": 3545,
          "type": "t_array:50<t_uint256>",
          "src": "1112:29:28"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
          "label": "_balances",
          "astId": 3064,
          "type": "t_mapping<t_uint256>",
          "src": "809:46:26"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
          "label": "_allowances",
          "astId": 3070,
          "type": "t_mapping<t_uint256>",
          "src": "862:69:26"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
          "label": "_totalSupply",
          "astId": 3072,
          "type": "t_uint256",
          "src": "938:28:26"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
          "label": "______gap",
          "astId": 3437,
          "type": "t_array:50<t_uint256>",
          "src": "7822:29:26"
        },
        {
          "contract": "MinterRole",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol",
          "label": "_minters",
          "astId": 2002,
          "type": "t_struct<Roles.Role>",
          "src": "327:27:18"
        },
        {
          "contract": "MinterRole",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol",
          "label": "______gap",
          "astId": 2102,
          "type": "t_array:50<t_uint256>",
          "src": "1193:29:18"
        },
        {
          "contract": "ERC20Mintable",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol",
          "label": "______gap",
          "astId": 3594,
          "type": "t_array:50<t_uint256>",
          "src": "760:29:29"
        },
        {
          "contract": "PauserRole",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/access/roles/PauserRole.sol",
          "label": "_pausers",
          "astId": 2125,
          "type": "t_struct<Roles.Role>",
          "src": "327:27:19"
        },
        {
          "contract": "PauserRole",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/access/roles/PauserRole.sol",
          "label": "______gap",
          "astId": 2225,
          "type": "t_array:50<t_uint256>",
          "src": "1193:29:19"
        },
        {
          "contract": "Pausable",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/lifecycle/Pausable.sol",
          "label": "_paused",
          "astId": 2713,
          "type": "t_bool",
          "src": "406:20:23"
        },
        {
          "contract": "Pausable",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/lifecycle/Pausable.sol",
          "label": "______gap",
          "astId": 2794,
          "type": "t_array:50<t_uint256>",
          "src": "1487:29:23"
        },
        {
          "contract": "ERC20Pausable",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Pausable.sol",
          "label": "______gap",
          "astId": 3717,
          "type": "t_array:50<t_uint256>",
          "src": "1209:29:30"
        },
        {
          "contract": "ERC20Burnable",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Burnable.sol",
          "label": "______gap",
          "astId": 3478,
          "type": "t_array:50<t_uint256>",
          "src": "841:29:27"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    },
    "Bankroll": {
      "address": "0x254dffcd3277C0b1660F6d42EFbB754edaBAbC2B",
      "constructorCode": "60806040526116ae806100136000396000f3fe",
      "bodyBytecodeHash": "ae21bb09dad74e57597aa44cdefd687fc8d8677775341cc6dce0ab8f53ff3d06",
      "localBytecodeHash": "d5b358c11f13469f8a58c6958f444bd33207b7a4134cc89e2c07185be49738c3",
      "deployedBytecodeHash": "d5b358c11f13469f8a58c6958f444bd33207b7a4134cc89e2c07185be49738c3",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 1892,
              "type": "t_mapping<t_bool>",
              "src": "150:32:17"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin/upgrades/contracts/Initializable.sol",
          "label": "initialized",
          "astId": 3999,
          "type": "t_bool",
          "src": "757:24:33"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin/upgrades/contracts/Initializable.sol",
          "label": "initializing",
          "astId": 4001,
          "type": "t_bool",
          "src": "876:25:33"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin/upgrades/contracts/Initializable.sol",
          "label": "______gap",
          "astId": 4057,
          "type": "t_array:50<t_uint256>",
          "src": "1951:29:33"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
          "label": "_owner",
          "astId": 2933,
          "type": "t_address",
          "src": "356:22:25"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
          "label": "______gap",
          "astId": 3044,
          "type": "t_array:50<t_uint256>",
          "src": "2318:29:25"
        },
        {
          "contract": "ManagerRole",
          "path": "contracts/ManagerRole.sol",
          "label": "_managers",
          "astId": 760,
          "type": "t_struct<Roles.Role>",
          "src": "667:28:5"
        },
        {
          "contract": "ManagerRole",
          "path": "contracts/ManagerRole.sol",
          "label": "______gap",
          "astId": 867,
          "type": "t_array:50<t_uint256>",
          "src": "1553:29:5"
        },
        {
          "contract": "Manageable",
          "path": "contracts/Manageable.sol",
          "label": "_paused",
          "astId": 656,
          "type": "t_bool",
          "src": "369:20:4"
        },
        {
          "contract": "Manageable",
          "path": "contracts/Manageable.sol",
          "label": "______gap",
          "astId": 737,
          "type": "t_array:50<t_uint256>",
          "src": "1446:29:4"
        },
        {
          "contract": "WithdrawerRole",
          "path": "contracts/WithdrawerRole.sol",
          "label": "_withdrawers",
          "astId": 1065,
          "type": "t_struct<Roles.Role>",
          "src": "783:31:8"
        },
        {
          "contract": "WithdrawerRole",
          "path": "contracts/WithdrawerRole.sol",
          "label": "______gap",
          "astId": 1193,
          "type": "t_array:50<t_uint256>",
          "src": "1868:29:8"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    },
    "Dice": {
      "address": "0xD833215cBcc3f914bD1C9ece3EE7BF8B14f841bb",
      "constructorCode": "6080604052612365806100136000396000f3fe",
      "bodyBytecodeHash": "89ebe8dc0ec42f8473c53b1f5bc2fb470c3f7e65e8705c26ba2b5c5774e891a8",
      "localBytecodeHash": "e0017e4013575d63393f735702a6c0d8ab457c133d1fbc1039e0cdd5c5d12070",
      "deployedBytecodeHash": "e0017e4013575d63393f735702a6c0d8ab457c133d1fbc1039e0cdd5c5d12070",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 1892,
              "type": "t_mapping<t_bool>",
              "src": "150:32:17"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_struct<Game.State>": {
          "id": "t_struct<Game.State>",
          "kind": "struct",
          "label": "Game.State",
          "members": [
            {
              "label": "balance",
              "astId": 486,
              "type": "t_mapping<t_uint256>",
              "src": "244:36:3"
            },
            {
              "label": "hash",
              "astId": 490,
              "type": "t_mapping<t_bytes32>",
              "src": "290:33:3"
            }
          ]
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_bytes32": {
          "id": "t_bytes32",
          "kind": "elementary",
          "label": "bytes32"
        },
        "t_mapping<t_bytes32>": {
          "id": "t_mapping<t_bytes32>",
          "valueType": "t_bytes32",
          "label": "mapping(key => bytes32)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin/upgrades/contracts/Initializable.sol",
          "label": "initialized",
          "astId": 3999,
          "type": "t_bool",
          "src": "757:24:33"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin/upgrades/contracts/Initializable.sol",
          "label": "initializing",
          "astId": 4001,
          "type": "t_bool",
          "src": "876:25:33"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin/upgrades/contracts/Initializable.sol",
          "label": "______gap",
          "astId": 4057,
          "type": "t_array:50<t_uint256>",
          "src": "1951:29:33"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
          "label": "_owner",
          "astId": 2933,
          "type": "t_address",
          "src": "356:22:25"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
          "label": "______gap",
          "astId": 3044,
          "type": "t_array:50<t_uint256>",
          "src": "2318:29:25"
        },
        {
          "contract": "ManagerRole",
          "path": "contracts/ManagerRole.sol",
          "label": "_managers",
          "astId": 760,
          "type": "t_struct<Roles.Role>",
          "src": "667:28:5"
        },
        {
          "contract": "ManagerRole",
          "path": "contracts/ManagerRole.sol",
          "label": "______gap",
          "astId": 867,
          "type": "t_array:50<t_uint256>",
          "src": "1553:29:5"
        },
        {
          "contract": "Manageable",
          "path": "contracts/Manageable.sol",
          "label": "_paused",
          "astId": 656,
          "type": "t_bool",
          "src": "369:20:4"
        },
        {
          "contract": "Manageable",
          "path": "contracts/Manageable.sol",
          "label": "______gap",
          "astId": 737,
          "type": "t_array:50<t_uint256>",
          "src": "1446:29:4"
        },
        {
          "contract": "SignerRole",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/access/roles/SignerRole.sol",
          "label": "_signers",
          "astId": 2248,
          "type": "t_struct<Roles.Role>",
          "src": "327:27:20"
        },
        {
          "contract": "SignerRole",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/access/roles/SignerRole.sol",
          "label": "______gap",
          "astId": 2348,
          "type": "t_array:50<t_uint256>",
          "src": "1193:29:20"
        },
        {
          "contract": "SignatureBouncer",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/drafts/SignatureBouncer.sol",
          "label": "______gap",
          "astId": 2691,
          "type": "t_array:50<t_uint256>",
          "src": "5507:29:22"
        },
        {
          "contract": "Dice",
          "path": "contracts/Dice.sol",
          "label": "_bankroll",
          "astId": 171,
          "type": "t_address",
          "src": "612:26:2"
        },
        {
          "contract": "Dice",
          "path": "contracts/Dice.sol",
          "label": "_state",
          "astId": 173,
          "type": "t_struct<Game.State>",
          "src": "644:25:2"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    }
  },
  "solidityLibs": {},
  "proxies": {
    "truedeck-quorido/Chip": [
      {
        "address": "0xCfEB869F69431e42cdB54A4F4f105C19C080A601",
        "version": "1.0.1",
        "implementation": "0xe78A0F7E598Cc8b0Bb87894B0F60dD2a88d6a8Ab",
        "admin": "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24",
        "kind": "Upgradeable"
      }
    ],
    "truedeck-quorido/Bankroll": [
      {
        "address": "0xC89Ce4735882C9F0f0FE26686c53074E09B0D550",
        "version": "1.0.1",
        "implementation": "0x254dffcd3277C0b1660F6d42EFbB754edaBAbC2B",
        "admin": "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24",
        "kind": "Upgradeable"
      }
    ],
    "truedeck-quorido/Dice": [
      {
        "address": "0x9561C133DD8580860B6b7E504bC5Aa500f0f06a7",
        "version": "1.0.1",
        "implementation": "0xD833215cBcc3f914bD1C9ece3EE7BF8B14f841bb",
        "admin": "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24",
        "kind": "Upgradeable"
      }
    ]
  },
  "manifestVersion": "2.2",
  "version": "1.0.1",
  "proxyAdmin": {
    "address": "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24"
  }
}